"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –µ–≥–æ —Å
–±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
"""
import telebot
from keyboards import KeyboardsAll
from config import TOKEN
from db import dogs_choice, cats_choice

bot = telebot.TeleBot(TOKEN)
kb = KeyboardsAll()
temp_data = {}


@bot.message_handler(commands=['start'])
def welcome(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–¥–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ
    —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É main_kb
    """
    bot.send_message(message.chat.id,
                     '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –¥–æ–±—Ä—ã–π —á–µ–ª–æ–≤–µ–∫!\n'
                     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø—Ä–∏—é—Ç–∞ "–í–µ—Ä–Ω–æ—Å—Ç—å"\n'
                     '–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ –ª—é–±–∏–º—Ü–∞',
                     reply_markup=kb.main_kb())
    temp_data[message.chat.id] = {}


@bot.message_handler()
def get_data_with_main_kb(message):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —Å–≤—è–∑—å —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä –≤ —Å–ª–æ–≤–∞—Ä–µ temp_data.
    """
    bot.send_message(message.chat.id,
                     '–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!',
                     reply_markup=telebot.types.ReplyKeyboardRemove())
    if message.text == 'üêï –°–æ–±–∞–∫–∞':
        bot.send_message(message.chat.id,
                         '–°–æ–±–∞–∫—É –∫–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ?',
                         reply_markup=kb.dogs_kb())
    elif message.text == 'üêà –ö–æ—à–∫–∞':
        bot.send_message(
            message.chat.id,
            '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ä–æ–¥—É',
            reply_markup=kb.cats_kb())
    temp_data[message.chat.id]['type'] = message.text


@bot.callback_query_handler(
    func=lambda call: call.data in ('–ë–æ–ª—å—à–∞—è', '–ú–∞–ª–µ–Ω—å–∫–∞—è', '–°—Ä–µ–¥–Ω—è—è'))
def get_characteristics(call):
    """
    –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã dogs_kb, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä
    –≤ —Å–ª–æ–≤–∞—Ä–µ temp_data
    """
    message = call.message
    bot.send_message(message.chat.id,
                     '–ì–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –¥–µ—Ä–∂–∞—Ç—å —Å–æ–±–∞–∫—É?',
                     reply_markup=kb.dog_maintenance_kb())
    temp_data[message.chat.id]['characteristics'] = call.data


@bot.callback_query_handler(
    func=lambda call: call.data in ('–î–≤–æ—Ä', '–î–æ–º/–∫–≤–∞—Ä—Ç–∏—Ä–∞'))
def get_maintenance(call):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã dog_maintenance_kb(),
    –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ü–∏–∫–ª–æ–º
    –ø–æ –∫–æ—Ä—Ç–µ–∂—É, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è dogs_choice, –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π
    –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–º–µ—é—â–∏—Ö—Å—è –≤ –ø—Ä–∏—é—Ç–µ
    —Å–æ–±–∞–∫–∞—Ö, –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    """
    message = call.message
    for i in dogs_choice(temp_data[message.chat.id]['type'],
                         temp_data[message.chat.id]['characteristics'],
                         call.data):
        with open(i[-1], 'rb') as file:
            photo = file.read()
        bot.send_photo(message.chat.id, photo)
        bot.send_message(message.chat.id, f'–ò–º—è: {i[4]}\n'
                                          f'–í–æ–∑—Ä–∞—Å—Ç: {i[5]}\n'
                                          f'–û–ø–∏—Å–∞–Ω–∏–µ: {i[6]}\n')
    bot.send_message(message.chat.id,
                     '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                     reply_markup=kb.actions_kb())


@bot.callback_query_handler(
    func=lambda call: call.data in ('–ü–æ—Ä–æ–¥–∏—Å—Ç–∞—è', '–ü—Ä–æ—Å—Ç–∞—è'))
def get_cat(call):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã cats_kb(),
    –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ü–∏–∫–ª–æ–º
    –ø–æ –∫–æ—Ä—Ç–µ–∂—É, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è cats_choice, –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π
    –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–º–µ—é—â–∏—Ö—Å—è –≤ –ø—Ä–∏—é—Ç–µ
    –∫–æ—à–∫–∞—Ö, –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    """
    message = call.message
    for i in cats_choice(temp_data[message.chat.id]['type'],
                         call.data):
        with open(i[-1], 'rb') as file:
            photo = file.read()
        bot.send_photo(message.chat.id, photo)
        bot.send_message(message.chat.id, f'–ò–º—è: {i[4]}\n'
                                          f'–í–æ–∑—Ä–∞—Å—Ç: {i[5]}\n'
                                          f'–û–ø–∏—Å–∞–Ω–∏–µ: {i[6]}\n')
    bot.send_message(message.chat.id,
                     '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                     reply_markup=kb.actions_kb())


@bot.callback_query_handler(
    func=lambda call: call.data == '–ù–∞ –≥–ª–∞–≤–Ω—É—é')
def action(call):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à–∏ "–Ω–∞ –≥–ª–∞–≤–Ω—É—é",
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    """
    message = call.message
    bot.send_message(message.chat.id,
                     '–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ –ª—é–±–∏–º—Ü–∞',
                     reply_markup=kb.main_kb())
    temp_data[message.chat.id] = {}
